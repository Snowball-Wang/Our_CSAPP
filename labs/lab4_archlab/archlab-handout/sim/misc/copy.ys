# copy_block - Copy src to dest and return xor checksum of src 
# Execution begins at address 0
	.pos 0 
	irmovq stack, %rsp    # Set up stack pointer
	irmovq src, %rdi      
	irmovq dest, %rsi
	irmovq $3, %rdx       # copy_block(src, dest, len)
	call copy_block       # Execute copy_block program
	halt

# Source block
	.align 8
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333


# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
	irmovq $8, %r8        # Set the constant 8
	irmovq $1, %r9        # Set the constant 1
	xorq %rax, %rax       # Set $rax to 0
	jmp test

loop:
	mrmovq (%rdi), %r10   # Get val
	addq %r8, %rdi        # src++
	rmmovq %r10, (%rsi)   # *dest = val
	addq %r8, %rsi        # dest++
	xorq %r10, %rax       # result ^= val
	subq %r9, %rdx        # len--
	
test:
	andq %rdx, %rdx       # Set CC
	jne loop              # Go to loop
	ret

# Stack starts here and grows to lower addresses
	.pos 0x2000
stack:
